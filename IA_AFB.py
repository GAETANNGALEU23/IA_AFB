{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7d133adc-2e71-4248-b723-1bb38ab95f09",
   "metadata": {},
   "outputs": [],
   "source": [
    "# afriland_app.py\n",
    "import streamlit as st\n",
    "from PIL import Image\n",
    "import datetime\n",
    "\n",
    "# Simulated user credentials (Replace with real auth logic in backend)\n",
    "USERS = {\n",
    "    \"user@afriland.cm\": \"password123\",\n",
    "    \"admin@afriland.cm\": \"adminpass\"\n",
    "}\n",
    "\n",
    "# Simulated session state setup\n",
    "def init_session_state():\n",
    "    if \"authenticated\" not in st.session_state:\n",
    "        st.session_state.authenticated = False\n",
    "    if \"email\" not in st.session_state:\n",
    "        st.session_state.email = \"\"\n",
    "    if \"history\" not in st.session_state:\n",
    "        st.session_state.history = []\n",
    "    if \"active_input\" not in st.session_state:\n",
    "        st.session_state.active_input = \"\"\n",
    "\n",
    "# Logo image\n",
    "@st.cache_resource\n",
    "def get_logo():\n",
    "    return Image.open(\"afriland_logo.png\")  # Place logo file in project folder\n",
    "\n",
    "# Login page\n",
    "def login_page():\n",
    "    st.markdown(\"\"\"\n",
    "        <style>\n",
    "        body {background-color: white;}\n",
    "        .stButton button {\n",
    "            background-color: red;\n",
    "            color: white;\n",
    "            border: none;\n",
    "            font-weight: bold;\n",
    "        }\n",
    "        </style>\n",
    "    \"\"\", unsafe_allow_html=True)\n",
    "\n",
    "    logo = get_logo()\n",
    "    st.image(logo, width=150)\n",
    "    st.markdown(\"## Connexion √† Afriland First Bank\")\n",
    "    email = st.text_input(\"Adresse email (domaine @afriland.cm)\", value=\"\")\n",
    "    password = st.text_input(\"Mot de passe\", type=\"password\")\n",
    "    \n",
    "    if st.button(\"Connexion\"):\n",
    "        if email in USERS and USERS[email] == password:\n",
    "            st.session_state.authenticated = True\n",
    "            st.session_state.email = email\n",
    "            st.rerun()\n",
    "        else:\n",
    "            st.error(\"Email ou mot de passe incorrect.\")\n",
    "\n",
    "# Main page\n",
    "def main_page():\n",
    "    st.set_page_config(layout=\"wide\")\n",
    "\n",
    "    with st.sidebar:\n",
    "        st.image(get_logo(), width=100)\n",
    "        st.markdown(\"### Historique\")\n",
    "        for idx, hist in enumerate(st.session_state.history[::-1]):\n",
    "            if st.button(f\"üîÅ {hist[:20]}...\", key=f\"hist_{idx}\"):\n",
    "                st.session_state.active_input = hist\n",
    "                st.rerun()\n",
    "\n",
    "    st.markdown(\"\"\"\n",
    "        <style>\n",
    "        .main-container {\n",
    "            background-color: #f2f2f2;\n",
    "            padding: 20px;\n",
    "            border-radius: 10px;\n",
    "        }\n",
    "        .header {\n",
    "            display: flex;\n",
    "            justify-content: space-between;\n",
    "            align-items: center;\n",
    "            background-color: white;\n",
    "            padding: 10px;\n",
    "            border-bottom: 2px solid #ccc;\n",
    "        }\n",
    "        .header h3 {\n",
    "            color: black;\n",
    "        }\n",
    "        .header .logout {\n",
    "            background-color: red;\n",
    "            color: white;\n",
    "            font-weight: bold;\n",
    "        }\n",
    "        .info-box {\n",
    "            background-color: white;\n",
    "            padding: 15px;\n",
    "            border-radius: 10px;\n",
    "            margin-top: 20px;\n",
    "            min-height: 200px;\n",
    "        }\n",
    "        </style>\n",
    "    \"\"\", unsafe_allow_html=True)\n",
    "\n",
    "    st.markdown(f\"\"\"\n",
    "    <div class=\"header\">\n",
    "        <h3>{st.session_state.email}</h3>\n",
    "        <form action=\"\" method=\"post\"><button class=\"logout\" type=\"submit\" name=\"logout\">D√©connexion</button></form>\n",
    "    </div>\n",
    "    \"\"\", unsafe_allow_html=True)\n",
    "\n",
    "    if \"logout\" in st.session_state:\n",
    "        st.session_state.authenticated = False\n",
    "        st.rerun()\n",
    "\n",
    "    st.markdown(\"<h2 style='color: red;'>FIRST BANK - IA</h2>\", unsafe_allow_html=True)\n",
    "\n",
    "    st.markdown(\"<div class='main-container'>\", unsafe_allow_html=True)\n",
    "\n",
    "    # Info display\n",
    "    st.markdown(\"<div class='info-box'>\", unsafe_allow_html=True)\n",
    "    if st.session_state.active_input:\n",
    "        st.markdown(f\"**üìù Derni√®re saisie :** {st.session_state.active_input}\")\n",
    "    else:\n",
    "        st.markdown(\"*Aucune donn√©e disponible.*\")\n",
    "    st.download_button(\"üì• T√©l√©charger\", data=st.session_state.active_input.encode(), file_name=\"info.txt\")\n",
    "    st.markdown(\"</div>\", unsafe_allow_html=True)\n",
    "\n",
    "    # Input zone\n",
    "    st.markdown(\"---\")\n",
    "    input_text = st.text_area(\"Zone de saisie\", value=st.session_state.active_input, height=150)\n",
    "    if st.button(\"Soumettre\"):\n",
    "        if input_text:\n",
    "            st.session_state.history.append(input_text)\n",
    "            st.session_state.active_input = input_text\n",
    "            st.rerun()\n",
    "\n",
    "    st.markdown(\"</div>\", unsafe_allow_html=True)\n",
    "\n",
    "# Entry point\n",
    "init_session_state()\n",
    "if not st.session_state.authenticated:\n",
    "    login_page()\n",
    "else:\n",
    "    main_page()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
